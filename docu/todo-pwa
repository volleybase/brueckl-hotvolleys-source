# index.html

-   <html>    ->   <html lang="de">
-   landmarks: <main>...</main>\
    main region (header/footer)
-   link information\
    aria-label="Read more about ..."
-   viewport meta tag\
    <meta name="viewport" content="width=device-width, initial-scale=1">
-   description meta\
    <meta name="Description" content="Put your description here.">


# PWA (ios)

https://www.netguru.com/codestories/few-tips-that-will-make-your-pwa-on-ios-feel-like-native
https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html

## apple touch icon

https://stackoverflow.com/questions/2997437/what-size-should-apple-touch-icon-png-be-for-ipad-and-iphone

Avoid icons with transparency - those will not work.

    <!-- place this in a head section -->
    <link rel="apple-touch-icon" sizes="152x152" href="touch-icon-ipad.png">
    <link rel="apple-touch-icon" sizes="180x180" href="touch-icon-iphone-retina.png">
    <link rel="apple-touch-icon" sizes="167x167" href="touch-icon-ipad-retina.png">
    <!-- old iphones cannot understand attribute sizes, they use the last one... -->
    <!-- size it 57x57 ??? -->
    <link rel="apple-touch-icon" href="touch-icon-iphone.png">


    <!-- iPhone(first generation or 2G), iPhone 3G, iPhone 3GS -->
    <link rel="apple-touch-icon" sizes="57x57" href="touch-icon-iphone.png">
    <!-- iPad and iPad mini @1x -->
    <link rel="apple-touch-icon" sizes="76x76" href="touch-icon-ipad.png">
    <!-- iPhone 4, iPhone 4s, iPhone 5, iPhone 5c, iPhone 5s, iPhone 6, iPhone 6s, iPhone 7, iPhone 7s, iPhone8 -->
    <link rel="apple-touch-icon" sizes="120x120" href="touch-icon-iphone-retina.png">
    <!-- iPad and iPad mini @2x -->
    <link rel="apple-touch-icon" sizes="152x152" href="touch-icon-ipad-retina.png">
    <!-- iPad Pro -->
    <link rel="apple-touch-icon" sizes="167x167" href="touch-icon-ipad-pro.png">
    <!-- iPhone X, iPhone 8 Plus, iPhone 7 Plus, iPhone 6s Plus, iPhone 6 Plus -->
    <link rel="apple-touch-icon" sizes="180x180" href="touch-icon-iphone-6-plus.png">
    <!-- Android Devices High Resolution -->
    <link rel="icon" sizes="192x192" href="icon-hd.png">
    <!-- Android Devices Normal Resolution -->
    <link rel="icon" sizes="128x128" href="icon.png">

## launch screen

    <!-- place this in a head section -->
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <link href="/apple_splash_2048.png" sizes="2048x2732" rel="apple-touch-startup-image" />
    <link href="/apple_splash_1668.png" sizes="1668x2224" rel="apple-touch-startup-image" />
    <link href="/apple_splash_1536.png" sizes="1536x2048" rel="apple-touch-startup-image" />
    <link href="/apple_splash_1125.png" sizes="1125x2436" rel="apple-touch-startup-image" />
    <link href="/apple_splash_1242.png" sizes="1242x2208" rel="apple-touch-startup-image" />
    <link href="/apple_splash_750.png" sizes="750x1334" rel="apple-touch-startup-image" />
    <link href="/apple_splash_640.png" sizes="640x1136" rel="apple-touch-startup-image" />

## dialog 'Add to homescreen'

detection - only for ios and if not added already

    // Detects if device is on iOS
    const isIos = () => {
      const userAgent = window.navigator.userAgent.toLowerCase();
      return /iphone|ipad|ipod/.test( userAgent );
    }
    // Detects if device is in standalone mode
    const isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);

    // Checks if should display install popup notification:
    if (isIos() && !isInStandaloneMode()) {
      this.setState({ showInstallMessage: true });
    }

Complete solution (with ember): https://dockyard.com/blog/2017/09/27/encouraging-pwa-installation-on-ios

## Hide Safari Interface

    <meta name="apple-mobile-web-app-capable" content="yes">

## Status Bar

    <meta name="apple-mobile-web-app-status-bar-style" content="black">

## Persit 'everything'

ios restarts the app after returning from background, so its necessary to
persist the state to return to the point where you left...

## Navigation

How to go back?

## Prepare for offline

Service worker for caching the code.

## Share data between pwa in standalone and browser modes

-   The cache is the same - use runtime cache to share data:
    https://www.netguru.com/codestories/how-to-share-session-cookie-or-state-between-pwa-in-standalone-mode-and-safari-on-ios
-   https://github.com/macap/pwa-data-sharing-sw

# Tipps & Tricks

http://www.jomendez.com/2018/06/05/add-home-screen-pwas/

Wof端r: https://gist.github.com/PaulKinlan/d66f777f5bde04926f29fc5c7ff345e7

# ARIA roles

(https://developer.paciellogroup.com/blog/2013/02/using-wai-aria-landmarks-2013/)

Aria                 |HTML5 | #
---------------------|------|---:
role="banner"        |header|0-1
role="complementary" |aside |0-n
role="contentinfo"   |footer|0-1
role="form"          |if not form(?!)|0-n
role="main"          |main  |1
role="navigation"    |nav   |?
role="search"        |div/form/...|0-n


# zertifikat

## simplecrawler
kann https crawlen, wenn ignoreInvalidSSL 0 true

## lighthouse
scheitert beim Test wegen dem ung端ltigen Zertifikat

Importieren unter Chrome -> Settings -> Advanced -> Manage Certificates\
(ist Windows eigenes Tool Zertifikate)

-   Eigene Zertifikate\
    localhost\
    G端ltig bis 15.08.2028
-   Vertrauensw端rdige Stammzertifizierungsstellen\
    (Englisch vermutlich Authorities)
    Importiert\
    => lighthouse kann testen
